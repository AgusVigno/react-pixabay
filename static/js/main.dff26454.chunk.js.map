{"version":3,"sources":["components/Error.js","components/Formulario.js","components/Imagen.js","components/ListadoImagenes.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Formulario","guardarBusqueda","useState","termino","guardarTermino","error","actualizarError","onSubmit","e","preventDefault","trim","type","placeholder","onChange","target","value","Imagen","imagen","largeImageURL","likes","previewURL","tags","views","src","alt","href","rel","ListadoImagen","imagenes","map","key","id","App","busqueda","guardarImagenes","paginaActual","guardarPaginaActual","totalPaginas","guardarTotalPaginas","useEffect","a","imagenesPorPagina","url","fetch","resultado","json","respuesta","hits","calcularTotalPaginas","Math","ceil","totalHits","document","querySelector","scrollIntoView","behavior","consultarAPI","ListadoImagenes","onClick","nuevaPaginaActual","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.dff26454.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Error = ({mensaje}) => {\n    return ( \n        <p className=\"my-3 p4 text-center alert alert-primary\">{mensaje}</p>\n    );\n}\n \nexport default Error;","import React, {useState} from 'react';\nimport Error from './Error';\n\nconst Formulario = ({guardarBusqueda}) => {\n\n    const [termino, guardarTermino] = useState('');\n    const [error, actualizarError] = useState(false);\n\n    const realizarBusqueda = e => {\n        e.preventDefault();\n\n        //validar\n        if(termino.trim() === ''){\n            actualizarError(true);\n            return\n        }\n\n        //pasar al componente principal el termino de busqueda\n        actualizarError(false);\n        \n        guardarBusqueda(termino);\n    }\n\n    return (\n        <form\n            onSubmit={realizarBusqueda}\n        >\n            <div className=\"row\">\n                <div className=\"form-group col-md-8\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Busca una imagen, ejemplo futbol o cafe\"\n                        onChange={e => guardarTermino(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-lg btn-danger btn-block\"\n                        value=\"Buscar\"\n                    />\n                </div>\n            </div>\n\n            {error ? <Error mensaje='Debes completar el término de búsqueda'/> : null}\n        </form>\n    );\n}\n \nexport default Formulario;","import React from 'react';\n\nconst Imagen = ({imagen}) => {\n\n    //extraer los valores\n    const {largeImageURL, likes, previewURL, tags, views} = imagen;\n\n    return ( \n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\n            <div className=\"card\">\n                <img src={previewURL} alt={tags} className=\"card-image-top\"/>\n            </div>\n            <div className=\"card-body\">\n                <p className=\"card-text\">{likes} Me Gusta</p>\n                <p className=\"card-text\">{views} Vistas</p>\n            </div>\n            <div className=\"card-footer\">\n                <a\n                    href={largeImageURL}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"btn btn-primary btn-block\"\n                >Ver Imagen</a>\n            </div>\n        </div>\n    );\n}\n \nexport default Imagen;","import React from 'react';\nimport Imagen from './Imagen';\n\nconst ListadoImagen = ({imagenes}) => {\n    return ( \n        <div className=\"col-12 p-5 row\">\n            {imagenes.map(imagen => (\n                <Imagen \n                    key={imagen.id}\n                    imagen={imagen}\n                />\n            ))}\n        </div>\n    );\n}\n \nexport default ListadoImagen;","import React, {useState, useEffect} from 'react';\nimport Formulario from './components/Formulario';\nimport ListadoImagenes from './components/ListadoImagenes';\n\n\nfunction App() {\n\n\tconst [busqueda, guardarBusqueda] = useState('');\n\tconst [imagenes, guardarImagenes] = useState([]);\n\t\n\t//implementar un paginado\n\tconst [paginaActual, guardarPaginaActual] = useState(1);\n\tconst [totalPaginas, guardarTotalPaginas] = useState(5);\n\n\tuseEffect(() => {\n\t\tconst consultarAPI = async () => {\n\t\t\t//evitamos que cargue al iniciar la pagina\n\t\t\tif(busqueda === '') return null;\n\t\t\tconst imagenesPorPagina = 30;\n\t\t\tconst apiKey = '16771829-679b3d0dba38be73f0f71d71e';\n\t\t\tconst url = `https://pixabay.com/api/?key=${apiKey}&q=${busqueda}&per_page=${imagenesPorPagina}&page=${paginaActual}`;\n\n\t\t\tconst resultado = await fetch(url);\n\t\t\tconst respuesta = await resultado.json();\n\t\t\tguardarImagenes(respuesta.hits);\n\n\t\t\t//calcular el total de paginas\n\t\t\tconst calcularTotalPaginas = Math.ceil(respuesta.totalHits / imagenesPorPagina);\n\t\t\tguardarTotalPaginas(calcularTotalPaginas);\n\n\t\t\t//mover la pantalla hacia arriba\n\t\t\tconst jumbotron = document.querySelector('.jumbotron');\n\t\t\tjumbotron.scrollIntoView({ behavior: 'smooth'});\n\n\t\t}\n\t\tconsultarAPI();\n\t}, [busqueda, paginaActual]);\n\n\tconst paginaAnterior = () => {\n\t\tconst nuevaPaginaActual = paginaActual - 1;\n\t\t\n\t\tif (nuevaPaginaActual === 0) return\n\t\tguardarPaginaActual(nuevaPaginaActual);\n\t}\n\n\tconst paginaSiguiente = () => {\n\t\tconst nuevaPaginaActual = paginaActual + 1;\n\t\t\n\t\tif (nuevaPaginaActual > totalPaginas) return\n\t\tguardarPaginaActual(nuevaPaginaActual);\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"jumbotron\">\n\t\t\t\t<p className=\"lead text-center\">Buscador de imágenes</p>\n\n\t\t\t\t<Formulario \n\t\t\t\t\tguardarBusqueda={guardarBusqueda}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t<ListadoImagenes \n\t\t\t\t\timagenes={imagenes}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t{ (paginaActual === 1)\n\t\t\t\t? \n\t\t\t\t\tnull \n\t\t\t\t: \n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"bbtn btn-info mr-1\"\n\t\t\t\t\t\tonClick={paginaAnterior}\n\t\t\t\t\t>&laquo; Anterior</button> \n\t\t\t\t}\n\t\t\t\t{ (paginaActual === totalPaginas ) \n\t\t\t\t? \n\t\t\t\t\tnull \n\t\t\t\t:\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"bbtn btn-info mr-1\"\n\t\t\t\t\t\tonClick={paginaSiguiente}\n\t\t\t\t\t>Siguiente &raquo;</button> \n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}